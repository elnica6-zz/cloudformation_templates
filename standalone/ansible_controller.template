{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template deploys an Ansible Controller",
  "Parameters": {
    "S3Bucket": {
      "Description": "S3 bucket name",
      "Type": "String",
      "Default": "myprivates3bucket"
    },
    "VpcStackName": {
      "Description": "The name of the VPC CloudFormation stack for cross stack referencing.",
      "Type": "String"
    },
    "KeyPairName": {
      "Description": "Name of an existing Amazon EC2 key pair to enable SSH or RDP access to the instances.",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern": "[\\x20-\\x7E]*",
      "ConstraintDescription": "Can contain only ASCII characters."
    },
    "Route53HostedZoneName": {
      "Description": "Name of private hosted zone where EC2 A record will reside",
      "Type": "String"
    }
  },
  "Mappings": {
    "RegionOS2AMI": {
      "us-east-1": {
        "Linux": "ami-22ce4934"
      },
      "us-west-2": {
        "Linux": "ami-8ca83fec"
      },
      "eu-west-1": {
        "Linux": "ami-e5083683"
      },
      "ap-southeast-2": {
        "Linux": "ami-db704cb8"
      },
      "ap-southeast-1": {
        "Linux": "ami-b953f2da"
      },
      "ap-south-1": {
        "Linux": "ami-34b4c05b"
      },
      "cn-north-1": {
        "Linux": "ami-8e6aa0e3"
      },
      "us-east-2": {
        "Linux": "ami-58277d3d"
      },
      "us-west-1": {
        "Linux": "ami-23e8a343"
      },
      "eu-central-1": {
        "Linux": "ami-f9619996"
      },
      "ap-northeast-1": {
        "Linux": "ami-0c11b26d"
      },
      "sa-east-1": {
        "Linux": "ami-97831ffb"
      },
      "eu-west-2": {
        "Linux": "ami-d6cbc1b2"
      },
      "ca-central-1": {
        "Linux": "ami-b48b39d0"
      },
      "ap-northeast-2": {
        "Linux": "ami-983ce8f6"
      }
    }
  },
  "Resources": {
    "Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AdministratorAccess"
        ],
        "RoleName": "AnsibleControllerRole"
      }
    },
    "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "Role"
          }
        ]
      }
    },
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTP(S) access and SSH access.",
        "VpcId": {
          "Fn::ImportValue": {
            "Fn::Sub": "${AWS::Region}-${VpcStackName}-VpcId"
          }
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Fn::ImportValue": {
                "Fn::Sub": "${AWS::Region}-${VpcStackName}-VpcCidr"
              }
            }
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Fn::ImportValue": {
                "Fn::Sub": "${AWS::Region}-${VpcStackName}-VpcCidr"
              }
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "Instance": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Authentication": {
          "S3Access": {
            "type": "S3",
            "buckets": [
              {
                "Ref": "S3Bucket"
              }
            ],
            "roleName": {
              "Ref": "Role"
            }
          }
        },
        "AWS::CloudFormation::Init": {
          "configSets": {
            "ansible": [
              "ansible"
            ],
            "default": [
              {
                "ConfigSet": "ansible"
              }
            ]
          },
          "ansible": {
            "packages": {
              "python": {
                "boto3": [],
                "ansible": []
              }
            },
            "files": {
              "/home/ec2-user/.ssh/ansible.pem": {
                "source": {
                  "Fn::Join": [
                    "",
                    [
                      "https://",
                      {
                        "Ref": "S3Bucket"
                      },
                      ".s3.amazonaws.com/software/ansible/ansible.pem"
                    ]
                  ]
                },
                "group": "root",
                "owner": "root",
                "mode": "000400",
                "authentication": "S3Access"
              },
              "/etc/ansible/ec2.py": {
                "source": "https://raw.githubusercontent.com/ansible/ansible/devel/contrib/inventory/ec2.py"
              },
              "/etc/ansible/ec2.ini": {
                "source": "https://raw.githubusercontent.com/ansible/ansible/devel/contrib/inventory/ec2.ini"                
              },
              "/home/ec2-user/playbooks/cf_ansible_codedeploy_demo.yml": {
                "source": {
                  "Fn::Join": [
                    "",
                    [
                      "https://",
                      {
                        "Ref": "S3Bucket"
                      },
                      ".s3.amazonaws.com/software/ansible/playbooks/cf_ansible_codedeploy_demo.yml"
                    ]
                  ]
                },
                "authentication": "S3Access"
              },
              "/home/ec2-user/playbooks/files/lamp_stack.template": {
                "source": {
                  "Fn::Join": [
                    "",
                    [
                      "https://",
                      {
                        "Ref": "S3Bucket"
                      },
                      ".s3.amazonaws.com/cloudformation_templates/standalone/lamp_stack.template"
                    ]
                  ]
                },
                "authentication": "S3Access"
              }
            }
          }
        }
      },
      "Properties": {
        "IamInstanceProfile": {
          "Ref": "InstanceProfile"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "RegionOS2AMI",
            {
              "Ref": "AWS::Region"
            },
            "Linux"
          ]
        },
        "InstanceType": "t2.micro",
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "SubnetId": {
          "Fn::ImportValue": {
            "Fn::Sub": "${AWS::Region}-${VpcStackName}-PrivateSubnetAz1Id"
          }
        },
        "SecurityGroupIds": [
          {
            "Ref": "SecurityGroup"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ansible-controller"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -ex\n",
                "yum update -y\n",
                "/opt/aws/bin/cfn-init --region ",
                {
                  "Ref": "AWS::Region"
                },
                " -v -s ",
                {
                  "Ref": "AWS::StackName"
                },
                " -r Instance\n",
                "'\n"
              ]
            ]
          }
        }
      }
    },
    "Route53RecordSet": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "HostedZoneName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "Route53HostedZoneName"
              },
              "."
            ]
          ]
        },
        "Comment": "DNS name for my instance.",
        "Name": {
          "Fn::Join": [
            "",
            [
              "ansible-controller",
              ".",
              {
                "Ref": "Route53HostedZoneName"
              },
              "."
            ]
          ]
        },
        "Type": "A",
        "TTL": "900",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "Instance",
              "PrivateIp"
            ]
          }
        ]
      }
    }
  }
}
